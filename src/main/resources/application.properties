#--- Port for http
server.port=8080
spring.data.rest.base-path = /app

#--- DATA SOURCE
spring.datasource.url = jdbc:mysql://localhost:3306/ted_db?characterEncoding=utf-8&amp;autoReconnect=true
spring.datasource.username = root
spring.datasource.password = root
spring.datasource.driver-class-name = com.mysql.jdbc.Driver
spring.datasource.sql-script-encoding = utf-8

#--- JPA / HIBERNATE
spring.jpa.show-sql = true
spring.jpa.hibernate.ddl-auto = validate
spring.jpa.hibernate.naming.physical-strategy = org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
#--- The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect=org.hibernate.spatial.dialect.mysql.MySQL5InnoDBSpatialDialect
spring.jpa.database-platform = org.hibernate.spatial.dialect.mysql.MySQLSpatial56Dialect

# uncomment in case we found problems with objects maps fetching
spring.jackson.serialization.fail-on-empty-beans = false


#--- UNCOMMENT TO USE IT
#--- HTTPS - SSL
#--- The format used for the keystore. for JKS, set it as JKS
#server.ssl.key-store-type=PKCS12
#--- The path to the keystore containing the certificate
#server.ssl.key-store=javadevjournal.p12
#--- The password used to generate the certificate
#server.ssl.key-store-password=123456
#--- The alias mapped to the certificate
#server.ssl.key-alias=javadevjournal
#--- Run Spring Boot on HTTPS only
#server.port=8443